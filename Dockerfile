# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# syntax=docker/dockerfile:1
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 设置镜像源环境变量（默认使用清华源）
ARG USE_MIRROR=true
ARG APT_MIRROR=mirrors.tuna.tsinghua.edu.cn
ARG PIP_MIRROR=https://pypi.tuna.tsinghua.edu.cn/simple

# 配置APT镜像源（如果启用）
RUN if [ "$USE_MIRROR" = "true" ]; then \
        sed -i "s/deb.debian.org/$APT_MIRROR/g" /etc/apt/sources.list.d/debian.sources && \
        sed -i "s/security.debian.org/$APT_MIRROR/g" /etc/apt/sources.list.d/debian.sources; \
    fi

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# 安装uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /usr/local/bin/

# 复制项目配置文件
COPY pyproject.toml uv.lock* ./

# 安装Python依赖（配置镜像源）
RUN if [ "$USE_MIRROR" = "true" ]; then \
        UV_INDEX_URL=$PIP_MIRROR uv sync --frozen --no-cache; \
    else \
        uv sync --frozen --no-cache; \
    fi

# 复制应用代码
COPY . .

# 设置环境变量
ENV MCP_HOST=0.0.0.0
ENV MCP_PORT=8000
ENV MCP_TRANSPORT=streamable-http

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/mcp || exit 1

# 启动命令
CMD ["uv", "run", "server.py"]
