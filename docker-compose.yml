version: '3.8'

services:
  ros-mcp-server:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        USE_MIRROR: ${USE_MIRROR:-true}
        APT_MIRROR: ${APT_MIRROR:-mirrors.tuna.tsinghua.edu.cn}
        PIP_MIRROR: ${PIP_MIRROR:-https://pypi.tuna.tsinghua.edu.cn/simple}
    container_name: ros-mcp-server
    ports:
      - "${MCP_PORT:-8000}:8000"
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      - MCP_TRANSPORT=${MCP_TRANSPORT:-streamable-http}
      - ROSBRIDGE_IP=${ROSBRIDGE_IP:-10.90.0.101}
      - ROSBRIDGE_PORT=${ROSBRIDGE_PORT:-9090}
      - LOCAL_IP=${LOCAL_IP:-10.90.0.101}
    volumes:
      # 挂载日志目录
      - ./logs:/app/logs
      # 挂载下载目录（用于图像保存）
      - ./downloads:/app/downloads
      # 可选：挂载配置文件
      - ./config:/app/config:ro
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/mcp"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # 可选：添加一个简单的nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: ros-mcp-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - mcp-network
    depends_on:
      - ros-mcp-server
    restart: unless-stopped
    profiles:
      - nginx  # 使用 --profile nginx 来启用

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  logs:
  downloads: 